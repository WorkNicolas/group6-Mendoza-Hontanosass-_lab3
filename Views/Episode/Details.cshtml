@model group6_Mendoza_Hontanosass__lab3.Models.ViewModels.EpisodeDetailsViewModel
@{
    ViewData["Title"] = Model.Episode.Title;
}

<div class="row">
    <div class="col-md-8">
        <h1>@Model.Episode.Title</h1>
        <h4><a asp-controller="Podcast" asp-action="Details" asp-route-id="@Model.Podcast.PodcastID">@Model.Podcast.Title</a></h4>
        
        @if (!string.IsNullOrEmpty(Model.Episode.ThumbnailURL))
        {
            <img src="@Model.Episode.ThumbnailURL" class="img-fluid mb-3" alt="@Model.Episode.Title">
        }
        
        <div class="mb-3">
            <audio controls class="w-100" id="audioPlayer">
                <source src="@Model.Episode.AudioFileURL" type="audio/mpeg">
                Your browser does not support the audio element.
            </audio>
        </div>
        
        <p><strong>Release Date:</strong> @Model.Episode.ReleaseDate.ToString("MMMM dd, yyyy")</p>
        <p><strong>Duration:</strong> @Model.Episode.Duration minutes</p>
        <p><strong>Views:</strong> @Model.Episode.Views | <strong>Plays:</strong> @Model.Episode.PlayCount</p>
        
        @if (!string.IsNullOrEmpty(Model.Episode.Description))
        {
            <h5>Description</h5>
            <p>@Model.Episode.Description</p>
        }
        
        @if (User.Identity?.IsAuthenticated == true)
        {
            @if (!Model.IsSubscribed)
            {
                <form asp-controller="Subscription" asp-action="Subscribe" method="post" class="d-inline">
                    <input type="hidden" name="podcastId" value="@Model.Podcast.PodcastID" />
                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    <button type="submit" class="btn btn-success">Subscribe to Podcast</button>
                </form>
            }
            else
            {
                <form asp-controller="Subscription" asp-action="Unsubscribe" method="post" class="d-inline">
                    <input type="hidden" name="podcastId" value="@Model.Podcast.PodcastID" />
                    <input type="hidden" name="returnUrl" value="@Context.Request.Path" />
                    <button type="submit" class="btn btn-secondary">Unsubscribe</button>
                </form>
            }
        }
        
        @if (User.Identity?.IsAuthenticated == true && (Model.Podcast.CreatorID == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value || User.IsInRole("Admin")))
        {
            <a asp-action="Edit" asp-route-id="@Model.Episode.EpisodeID" class="btn btn-warning">Edit</a>
            <a asp-action="Delete" asp-route-id="@Model.Episode.EpisodeID" class="btn btn-danger">Delete</a>
        }
    </div>
    
    <div class="col-md-4">
        <h5>More from @Model.Podcast.Title</h5>
        @if (Model.Podcast.Episodes != null && Model.Podcast.Episodes.Any())
        {
            <div class="list-group">
                @foreach (var episode in Model.Podcast.Episodes.Where(e => e.EpisodeID != Model.Episode.EpisodeID).Take(5))
                {
                    <a asp-action="Details" asp-route-id="@episode.EpisodeID" class="list-group-item list-group-item-action">
                        <div class="d-flex w-100 justify-content-between">
                            <h6 class="mb-1">@episode.Title</h6>
                        </div>
                        <small>@episode.Duration min</small>
                    </a>
                }
            </div>
        }
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-12">
        <h3>Comments (@Model.Comments.Count)</h3>
        
        @if (User.Identity?.IsAuthenticated == true)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h5>Add a Comment</h5>
                    <form asp-controller="Comment" asp-action="Create" method="post">
                        <input type="hidden" name="EpisodeID" value="@Model.Episode.EpisodeID" />
                        <input type="hidden" name="PodcastID" value="@Model.Podcast.PodcastID" />
                        <div class="form-group mb-3">
                            <textarea name="Text" class="form-control" rows="3" placeholder="Write your comment..." required></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Post Comment</button>
                    </form>
                </div>
            </div>
        }
        
        @foreach (var comment in Model.Comments)
        {
            <div class="card mb-2">
                <div class="card-body">
                    <h6 class="card-subtitle mb-2">
                        @comment.Username
                        <small class="text-muted">@comment.Timestamp.ToString("MMM dd, yyyy 'at' h:mm tt")</small>
                        @if (comment.IsEdited)
                        {
                            <small class="text-muted">(edited)</small>
                        }
                    </h6>
                    <p class="card-text">@comment.Text</p>
                    @if (User.Identity?.IsAuthenticated == true && (comment.UserID == Model.CurrentUserId || User.IsInRole("Admin")))
                    {
                        <a asp-controller="Comment" asp-action="Edit" asp-route-episodeId="@comment.EpisodeID" asp-route-commentId="@comment.CommentID" class="btn btn-sm btn-warning">Edit</a>
                        <form asp-controller="Comment" asp-action="Delete" method="post" class="d-inline">
                            <input type="hidden" name="episodeId" value="@comment.EpisodeID" />
                            <input type="hidden" name="commentId" value="@comment.CommentID" />
                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this comment?');">Delete</button>
                        </form>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('audioPlayer').addEventListener('play', function() {
            fetch('@Url.Action("IncrementPlayCount", "Episode", new { id = Model.Episode.EpisodeID })', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
        });
    </script>
}
